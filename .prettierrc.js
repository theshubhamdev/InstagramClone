module.exports = {
  env: {
    "jest/globals": true,
  },
  root: true,
  extends: [
    "@react-native-community",
    "plugin:react/recommended",
    "plugin:@typescript-eslint/recommended",
  ],
  plugins: ["jest", "react", "import", "@typescript-eslint"],
  rules: {
    semi: ["error", "always"],
    "import/newline-after-import": [
      "error",
      {
        count: 1,
      },
    ],
    "sort-imports": [
      "error",
      {
        ignoreDeclarationSort: true,
      },
    ],
    "import/order": [
      "error",
      {
        groups: [
          "builtin",
          "external",
          "internal",
          "parent",
          "sibling",
          "index",
          "object",
          "type",
        ],
        "newlines-between": "always",
        alphabetize: {
          order:
            "asc" /* sort in ascending order. Options: ['ignore', 'asc', 'desc'] */,
          caseInsensitive: true /* ignore case. Options: [true, false] */,
        },
        warnOnUnassignedImports: false,
      },
    ],
    "react/require-default-props": ["error"],
    "react/jsx-max-props-per-line": [
      "error",
      {
        when: "always",
        maximum: 1,
      },
    ],
    "react/jsx-first-prop-new-line": ["error", "multiline-multiprop"],
    "react/default-props-match-prop-types": ["error"],
    "react/sort-prop-types": ["error"],
    "@typescript-eslint/no-namespace": ["off"],
    "computed-property-spacing": ["error", "always"],
    "array-bracket-spacing": [
      "error",
      "always",
      {
        singleValue: true,
        objectsInArrays: true,
        arraysInArrays: true,
      },
    ],
    "comma-spacing": ["off"],
    "@typescript-eslint/comma-spacing": [
      "error",
      {
        before: false,
        after: true,
      },
    ],
    "comma-style": ["error", "last"],
    indent: ["off"],
    "@typescript-eslint/indent": [
      "error",
      2,
      {
        ignoredNodes: ["TemplateLiteral"],
        SwitchCase: 1,
      },
    ],
    "key-spacing": ["error"],
    "no-mixed-spaces-and-tabs": ["error"],
    "no-multiple-empty-lines": ["error", { max: 1 }],
    "func-call-spacing": ["off"],
    "@typescript-eslint/func-call-spacing": ["error", "never"],
    "keyword-spacing": ["off"],
    "@typescript-eslint/keyword-spacing": [
      "error",
      {
        before: true,
        after: false,
        overrides: {
          case: { after: true },
          class: { after: true },
          const: { after: true },
          delete: { after: true },
          default: { after: true },
          do: { after: true },
          else: { after: true },
          export: { after: true },
          finally: { after: true },
          import: { after: true },
          in: { after: true },
          let: { after: true },
          new: { after: true },
          of: { after: true },
          return: { after: true },
          static: { after: true },
          try: { after: true },
          var: { after: true },
          with: { after: true },
          yield: { after: true },
          from: { after: true },
        },
      },
    ],
    "no-trailing-spaces": ["error"],
    "object-curly-spacing": ["off"],
    "@typescript-eslint/object-curly-spacing": [
      "error",
      "always",
      {
        arraysInObjects: true,
        objectsInObjects: true,
      },
    ],
    "one-var": ["error", "never"],
    "padded-blocks": ["error", "never"],
    "quote-props": ["error", "as-needed"],
    "space-before-function-paren": ["off"],
    "@typescript-eslint/space-before-function-paren": [
      "error",
      {
        anonymous: "never",
        named: "never",
        asyncArrow: "always",
      },
    ],
    "space-before-blocks": ["error", "always"],
    "arrow-spacing": ["error", { before: true, after: true }],
    "space-in-parens": ["error", "always"],
    "space-infix-ops": ["off"],
    "@typescript-eslint/space-infix-ops": ["error"],
    "spaced-comment": ["error", "always"],
    "no-dupe-args": ["error"],
    "no-dupe-keys": ["error"],
    "no-duplicate-case": ["error"],
    "no-empty": ["error", { allowEmptyCatch: true }],
    "no-extra-semi": ["error"],
    "no-func-assign": ["error"],
    "no-sparse-arrays": ["error"],
    "no-unreachable": ["error"],
    "use-isnan": ["error"],
    "valid-typeof": ["error"],
    "no-catch-shadow": ["error"],
    "no-label-var": ["error"],
    "no-shadow": ["off"],
    "@typescript-eslint/no-shadow": ["warn"],
    "no-undef-init": ["warn"],
    "no-undefined": ["off"],
    "template-curly-spacing": ["off"],
    "no-undef": ["warn"],
    "no-case-declarations": ["warn"],
    "no-unsafe-finally": ["off"],
    "no-constant-condition": ["off"],
    "no-useless-escape": ["warn"],
    "no-async-promise-executor": ["warn"],
    "react/no-did-mount-set-state": ["warn"],
    "react-hooks/exhaustive-deps": ["warn"],
    "space-unary-ops": ["off"],
    "object-property-newline": [
      "error",
      {
        allowAllPropertiesOnSameLine: true,
      },
    ],
    "brace-style": ["off"],
    "@typescript-eslint/brace-style": [
      "warn",
      "1tbs",
      {
        allowSingleLine: false,
      },
    ],
    "@typescript-eslint/member-delimiter-style": [
      "error",
      {
        multiline: {
          delimiter: "comma",
          requireLast: true,
        },
        singleline: {
          delimiter: "comma",
          requireLast: false,
        },
      },
    ],
    "no-extra-boolean-cast": ["off"],
  },
  settings: {
    "import/resolver": {
      "babel-module": {},
    },
  },
};
